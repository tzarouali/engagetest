/*
 * This file is generated by jOOQ.
*/
package jooq.jooqobjects.tables.records;


import java.math.BigDecimal;
import java.time.LocalDate;

import javax.annotation.Generated;

import jooq.jooqobjects.tables.Expense;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpenseRecord extends UpdatableRecordImpl<ExpenseRecord> implements Record5<Integer, LocalDate, BigDecimal, String, BigDecimal> {

    private static final long serialVersionUID = -1456704547;

    /**
     * Setter for <code>test.expense.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.expense.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.expense.date</code>.
     */
    public void setDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.expense.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>test.expense.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.expense.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>test.expense.reason</code>.
     */
    public void setReason(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.expense.reason</code>.
     */
    public String getReason() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.expense.vat</code>.
     */
    public void setVat(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.expense.vat</code>.
     */
    public BigDecimal getVat() {
        return (BigDecimal) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, LocalDate, BigDecimal, String, BigDecimal> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, LocalDate, BigDecimal, String, BigDecimal> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Expense.EXPENSE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field2() {
        return Expense.EXPENSE.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Expense.EXPENSE.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Expense.EXPENSE.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Expense.EXPENSE.VAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getVat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpenseRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpenseRecord value2(LocalDate value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpenseRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpenseRecord value4(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpenseRecord value5(BigDecimal value) {
        setVat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpenseRecord values(Integer value1, LocalDate value2, BigDecimal value3, String value4, BigDecimal value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExpenseRecord
     */
    public ExpenseRecord() {
        super(Expense.EXPENSE);
    }

    /**
     * Create a detached, initialised ExpenseRecord
     */
    public ExpenseRecord(Integer id, LocalDate date, BigDecimal amount, String reason, BigDecimal vat) {
        super(Expense.EXPENSE);

        set(0, id);
        set(1, date);
        set(2, amount);
        set(3, reason);
        set(4, vat);
    }
}
